#!/bin/bash
# Script patch boot.img ƒë·ªÉ ch√®n Arch Linux ARM rootfs cho J2 Prime (ARMv7)
# Y√™u c·∫ßu: Ubuntu/Debian c√≥ s·∫µn: abootimg, cpio, tar, wget

BOOT_IMG="boot.img"      # File boot.img g·ªëc
TMP_DIR="boot_unpack"
NEW_BOOT="boot_patched.img"
ARCH_URL="http://os.archlinuxarm.org/os/ArchLinuxARM-armv7-latest.tar.gz"
ARCH_ROOTFS="arch-rootfs.tar.gz"

# Ki·ªÉm tra file boot.img
if [[ ! -f "$BOOT_IMG" ]]; then
    echo "‚ùå Kh√¥ng t√¨m th·∫•y $BOOT_IMG"
    exit 1
fi

# C√†i c√¥ng c·ª• n·∫øu ch∆∞a c√≥
sudo apt update
sudo apt install -y abootimg cpio wget

# B∆∞·ªõc 1: T·∫£i rootfs Arch Linux ARM
if [[ ! -f "$ARCH_ROOTFS" ]]; then
    echo "üåê ƒêang t·∫£i Arch Linux ARM rootfs..."
    wget -O "$ARCH_ROOTFS" "$ARCH_URL"
else
    echo "‚úÖ ƒê√£ c√≥ $ARCH_ROOTFS, b·ªè qua b∆∞·ªõc t·∫£i."
fi

# B∆∞·ªõc 2: Gi·∫£i n√©n boot.img
rm -rf "$TMP_DIR"
mkdir "$TMP_DIR"
cd "$TMP_DIR" || exit
abootimg -x "../$BOOT_IMG"

# B∆∞·ªõc 3: Gi·∫£i n√©n initramfs
mkdir initramfs
cd initramfs || exit
cat ../initrd.img | gzip -d | cpio -idmv

# B∆∞·ªõc 4: Gi·∫£i n√©n rootfs Arch v√†o /arch (b·ªè qua c·∫£nh b√°o)
mkdir -p arch
echo "üì¶ Gi·∫£i n√©n Arch rootfs..."
tar --warning=no-unknown-keyword --no-xattrs -xzf "../../$ARCH_ROOTFS" -C arch

# B∆∞·ªõc 5: T·∫°o init script ƒë·ªÉ chroot v√†o Arch
cat << 'EOF' > init
#!/bin/sh
mount -t proc proc /proc
mount -t sysfs sys /sys
mount -o bind /dev /dev
exec chroot /arch /bin/bash
EOF
chmod +x init

# B∆∞·ªõc 6: ƒê√≥ng g√≥i l·∫°i initramfs
find . | cpio -o -H newc | gzip > ../new_initrd.img
cd ..

# B∆∞·ªõc 7: T·∫°o boot.img m·ªõi
abootimg --create "../$NEW_BOOT" -k zImage -r new_initrd.img -f bootimg.cfg

cd ..
echo "‚úÖ Ho√†n t·∫•t! File boot m·ªõi: $NEW_BOOT"
